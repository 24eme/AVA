# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules

# Auth

auth_login_no_cas:
  url: /login_no_cas
  param: { module: auth, action: login }

auth_logout:
  url: /logout
  param: { module: auth, action: logout }

auth_state:
  url: /auth/state
  param: { module: auth, action: state }

accueil:
  url: /
  param: { module: common, action: accueil }

# Common

contact:
  url: /contact
  param: { module: common, action: contact }

mentions_legales:
  url: /mentions-legales
  param: { module: common, action: mentionsLegales }

# Déclaration

declaration:
  url: /declaration
  param: { module: declaration, action: index }
  class: DeclarationRoute

declaration_doc:
  url: /declaration/doc
  param: { module: declaration, action: doc }

declaration_export:
  url: /declarations/export
  param: { module: declaration, action: export }

declaration_etablissement:
  url: /declarations/:identifiant
  param: { module: declaration, action: etablissement }
  class: DeclarationDeclarantRoute
  options:
    model:    EtablissementRoute
    type:     object
  requirements:
    sf_method: [get]

declaration_etablissement_selection:
  url: /declarations-etablissement-selection
  param: { module: declaration, action: etablissementSelection }

# PIECE

get_piece:
  url: /piece/get/:doc_id/:piece_id
  param: { module: piece, action: get }

forward_visu_piece:
  url: /piece/visualisation/:doc_id
  param: { module: piece, action: visualisation }

# FICHIER

pieces_historique:
  url: /historique-documents/:id
  param: { module: fichier, action: piecesHistorique }
  class: DeclarationDeclarantRoute
  options:
    model:    Etablissement
    type:     object
  requirements:
    sf_method: [get]

get_fichier:
  url: /fichier/get/:id
  param: { module: fichier, action: get }
  class: FichierRoute
  options:
    model:    Fichier
    type:     object
  requirements:
    sf_method: [get]

upload_fichier:
  url: /fichier/upload/:id
  param: { module: fichier, action: upload }
  class: DeclarationDeclarantRoute
  options:
    model:    Etablissement
    type:     object
  requirements:
    sf_method: [get, post]

#Mon compte

compte_teledeclarant_creation:
  url: /compte
  param: { module: compte_teledeclarant, action: creation }

compte_creation_confirmation:
  url: /compte-creation-confirmation
  param: { module: compte_teledeclarant, action: creationConfirmation }

compte_mot_de_passe_oublie:
  url: /mot_de_passe_oublie
  param: { module: compte_teledeclarant, action: motDePasseOublie }

compte_teledeclarant_premiere_connexion:
  url: /compte-premiere-connexion
  param: { module: compte_teledeclarant, action: premiereConnexion }

mon_compte:
  url: /mon-compte
  param: { module: compte_teledeclarant, action: modification }

redirect_to_mon_compte_civa:
  url: /mon-compte-civa
  param: { module: compte_teledeclarant, action: redirectToMonCompteCiva }

#Compte et etablissement admin

compte_recherche:
  url: /compte/recherche
  param: { module: compte, action: recherche }
  class: ContactsRoute

compte_recherche_avancee:
  url: /compte/recherche-avancee
  param: { module: compte, action: rechercheAvancee }
  class: ContactsRoute

compte_recherche_json:
  url: /compte/recherche.json
  param: { module: compte, action: rechercheJson }

compte_recherche_csv:
  url: /compte/recherche.csv
  param: { module: compte, action: rechercheCsv }

compte_creation:
  url: /compte/creation/:type_compte
  param: { module: compte, action: creation }

compte_visualisation:
  url: /compte/visualisation/:id
  param: { module: compte, action: visualisation }
  class: ContactsCompteRoute
  options:
    model:    Compte
    type:     object
  requirements:
    sf_method: [get]

compte_modification:
  url: /compte/modification/:id
  param: { module: compte, action: modification }
  class: CompteRoute
  options:
    model:    Compte
    type:     object
  requirements:
    sf_method: [get,post]

compte_tags_manuels:
  url: /compte-tags-manuels
  param: { module: compte, action: allTagsManuels }
  requirements:
    sf_method: [get]

compte_archiver:
  url: /compte-archiver/:id
  param: { module: compte, action: archiver }
  class: CompteRoute
  options:
    model:    Compte
    type:     object
  requirements:
    sf_method: [get]

compte_desarchiver:
  url: /compte-desarchiver/:id
  param: { module: compte, action: desarchiver }
  class: CompteRoute
  options:
    model:    Compte
    type:     object
  requirements:
    sf_method: [get]

#Facturation

facturation:
  url: /facturation
  param: { module: facturation, action: index }
  requirements:
    sf_method: [get, post]
  class: FacturationRoute

facturation_massive:
  url: /facturation_massive
  param: { module: facturation, action: massive }
  requirements:
    sf_method: [get, post]
  class: FacturationRoute

facturation_pdf:
  url: /facturation/pdf/:id
  param: { module: facturation, action: latex }
  class: FactureRoute
  options:
    model:    Facture
    type:     object
  requirements:
    sf_method: [get]

facturation_edition:
  url: /facturation/edition/:id
  param: { module: facturation, action: edition }
  class: FactureRoute
  options:
    model:    Facture
    type:     object
  requirements:
    sf_method: [get, post]

facturation_avoir:
  url: /facturation/avoir/:id
  param: { module: facturation, action: avoir }
  class: FactureRoute
  options:
    model:    Facture
    type:     object
  requirements:
    sf_method: [get, post]

facturation_paiement:
  url: /facturation/paiement/:id
  param: { module: facturation, action: paiement }
  class: FactureRoute
  options:
    model:    Facture
    type:     object
  requirements:
    sf_method: [get, post]

facturation_regenerate:
  url: /facturation/regenerer/:id
  param: { module: facturation, action: regenerate }
  class: FactureRoute
  options:
    model:    Facture
    type:     object
  requirements:
    sf_method: [get]

facturation_declarant:
  url: /facturation/declarant/:id
  param: { module: facturation, action: declarant }
  class: FacturationDeclarantRoute
  options:
    model:    Compte
    type:     object
  requirements:
    sf_method: [get, post]


#Génération

generation_view:
  url: /generation/:type_document/:date_emission
  param: { module: generation, action: view }
  requirements:
    sf_method: [get]

generation_delete:
  url: /generation/:type_document/:date_emission/delete
  param: { module: generation, action: delete }
  requirements:
    sf_method: [get]

generation_regenerate:
  url: /generation/:type_document/:date_emission/regenerer
  param: { module: generation, action: regenerate }
  requirements:
    sf_method: [get]

#Export

export:
  url: /export
  param: { module: export, action: index }
  requirements:
    sf_method: [get, post]
  class: ExportRoute

export_generation:
  url: /export/generation/:id
  param: { module: export, action: generation }
  requirements:
    sf_method: [get]
  class: ExportRoute

#Défaut

default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
