/* =================================================================================== 
 * File : toolbox.less
 * Description : LESS functions / helpers
 * Authors : Hamza Iqbal - hiqbal[at]actualys.com
 *			 MikaÃ«l Guillin - mguillin[at]actualys.com
 * Copyright: Actualys
/* =================================================================================== */	
	
	
.pie() { behavior: url(../pie.htc); }
	
/* ============================================================= */
/* TRANSITIONS */
/* ============================================================= */
.transition(@property: all, @duration: 0.2s, @timing-function: ease-in, @delay: 0)
{
	@val: @property @duration @timing-function @delay;
	
	-webkit-transition: @val; 
	   -moz-transition: @val;
	    -ms-transition: @val; 
	     -o-transition: @val; 
	        transition: @val;
}

.transition-browser-specific(@property: all, @duration: 0.2s, @timing-function: ease-in, @delay: 0)
{
	@val: @property @duration @timing-function @delay;
	
	-webkit-transition: ~"-webkit-@{val}"; 
	   -moz-transition: ~"-moz-@{val}";
	    -ms-transition: ~"-ms-@{val}"; 
	     -o-transition: ~"-o-@{val}"; 
	        transition: @val;
}

.no-transition()
{
	-webkit-transition-duration: none; 
	   -moz-transition-duration: none;
	    -ms-transition-duration: none; 
	     -o-transition-duration: none; 
	        transition-duration: none;
}

.transition-property(@property: all)
{
	-webkit-transition-property: @property; 
	   -moz-transition-property: @property;
	    -ms-transition-property: @property; 
	     -o-transition-property: @property; 
	        transition-property: @property;
}

.transition-property-browser-specific(@property: all)
{
	-webkit-transition-property: ~"-webkit-@{property}"; 
	   -moz-transition-property: ~"-moz-@{property}";
	    -ms-transition-property: ~"-ms-@{property}"; 
	     -o-transition-property: ~"-o-@{property}"; 
	        transition-property: @property;
}

.transition-duration(@duration: 0.2s)
{
	-webkit-transition-duration: @duration; 
	   -moz-transition-duration: @duration;
	    -ms-transition-duration: @duration; 
	     -o-transition-duration: @duration; 
	        transition-duration: @duration;
}

.transition-timing-function(@timing-function: ease-in)
{
	-webkit-transition-timing-function: @timing-function; 
	   -moz-transition-timing-function: @timing-function;
	    -ms-transition-timing-function: @function; 
	     -o-transition-timing-function: @timing-function; 
	        transition-timing-function: @timing-function;
}

.transition-delay(@delay: 0)
{
	-webkit-transition-delay: @delay; 
	   -moz-transition-delay: @delay;
	    -ms-transition-delay: @delay; 
	     -o-transition-delay: @delay; 
	        transition-delay: @delay;
}



/* ============================================================= */
/* ANIMATIONS */
/* ============================================================= */
.animation(@name, @duration: 1s, @iteration: 1)
{
	.animation-name(@name);
	.animation-duration(@duration);
	.animation-iteration-count(@iteration);
	.animation-fill-mode;
}

.animation-complete(@name, @duration, @timing-function, @delay, @iteration-count, @direction)
{
	@val: @name @duration @timing-function @delay @iteration-count @direction;
	
	-webkit-animation: @val;
	   -moz-animation: @val;
	    -ms-animation: @val;
	        animation: @val;
}

.no-animation()
{
	-webkit-animation: none;
	   -moz-animation: none;
	    -ms-animation: none;
	        animation: none;
}

.animation-name(@name)
{
	-webkit-animation-name: @name;
	   -moz-animation-name: @name;
	    -ms-animation-name: @name;
	        animation-name: @name;
}

.animation-duration(@duration)
{
	-webkit-animation-duration: @duration;
	   -moz-animation-duration: @duration;
	    -ms-animation-duration: @duration;
	        animation-duration: @duration;
}

.animation-timing-function(@timing-function)
{
	-webkit-animation-timing-function: @timing-function;
	   -moz-animation-timing-function: @timing-function;
	    -ms-animation-timing-function: @timing-function;
	        animation-timing-function: @timing-function;
}

.animation-delay(@delay)
{
	-webkit-animation-delay: @delay;
	   -moz-animation-delay: @delay;
	    -ms-animation-delay: @delay;
	        animation-delay: @delay;
}

.animation-iteration-count(@iteration-count)
{
	-webkit-animation-iteration-count: @iteration-count;
	   -moz-animation-iteration-count: @iteration-count;
	    -ms-animation-iteration-count: @iteration-count;
	        animation-iteration-count: @iteration-count;
}

.animation-direction(@direction)
{
	-webkit-animation-direction: @direction;
	   -moz-animation-direction: @direction;
	        animation-direction: @direction;
}

.animation-play-state(@state)
{
	-webkit-animation-play-state: @state;
	   -moz-animation-play-state: @state;
	    -ms-animation-play-state: @state;
	        animation-play-state: @state;
}

.animation-fill-mode(@fill-mode: both)
{
	-webkit-animation-fill-mode: @fill-mode;
	   -moz-animation-fill-mode: @fill-mode;
	     -o-animation-fill-mode: @fill-mode;
	        animation-fill-mode: @fill-mode;
}

/* ============================================================= */
/* TRANSFORMATION */
/* ============================================================= */
.transform(@arguments)
{
	-webkit-transform: @arguments;
	   -moz-transform: @arguments;
      	-ms-transform: @arguments;
	     -o-transform: @arguments;
	        transform: @arguments;
}

.transform-origin(@x, @y)
{
	@val: @x @y;
	
	-webkit-transform-origin: @val; 
	   -moz-transform-origin: @val; 
	    -ms-transform-origin: @val; 
	     -o-transform-origin: @val; 
	        transform-origin: @val;
}

.transform-style(@style)
{
	-webkit-transform-style: @style; 
	        transform-style: @style;
}

.transform-flat()
{
	.transform-style(flat);
}

.transform-3d()
{
	.transform-style(preserve-3d);
}

.rotate(@deg:5deg)
{
	.transform(rotate(@deg));
}

.rotateX(@deg:5deg)
{
	.transform(rotateX(@deg));
}

.rotateY(@deg:5deg)
{
	.transform(rotateY(@deg));
}

.rotateZ(@deg:5deg)
{
	.transform(rotateZ(@deg));
}

.rotate3d(@x: 0, @y:0, @z:0, @angle: 5deg)
{
	.transform(rotate3d(@x, @y, @z, @angle));
}

.scale(@ratio:1.5)
{
	.transform(scale(@ratio));
}

.scaleX(@ratio:1.5)
{
	.transform(scaleX(@ratio));
}

.scaleY(@ratio:1.5)
{
	.transform(scaleY(@ratio));
}

.scale3d(@x:0, @y:0, @z:0)
{
	.transform(scale3d(@x, @y, @z));
}

.translate(@x:0, @y:0)
{
	.transform(translate(@x, @y));
}

.translateX(@x:0)
{
	.transform(translateX(@x));
}

.translateY(@y:0)
{
	.transform(translateY(@y));
}

.translateZ(@z:0)
{
	.transform(translateZ(@z));
}

.translate3d(@x:0, @y:0, @z:0)
{
	.transform(translate3d(@x, @y, @z));
}

.perspective(@perspective)
{
	-webkit-perspective: @perspective;
	        perspective: @perspective;
}

.perspective-origin(@x, @y)
{
	@val: @x @y;
	
	-webkit-perspective-origin: @val;
	        perspective-origin: @val;
}

.backface-visibility(@visibility)
{
	-webkit-backface-visibility: @visibility;
	   -moz-backface-visibility: @visibility;
	    -ms-backface-visibility: @visibility;
	        backface-visibility: @visibility;
}


/* ============================================================= */
/* BACKGROUND */
/* ============================================================= */
.linear-gradient(@couleur-1: #fff, @couleur-2: #000, @direction: top)
{
	background: @couleur-1;
	background: -webkit-linear-gradient(@direction, @couleur-1, @couleur-2);
	background: -moz-linear-gradient(@direction, @couleur-1, @couleur-2);
	background: -o-linear-gradient(@direction, @couleur-1, @couleur-2);
	background: -ms-linear-gradient(@direction, @couleur-1, @couleur-2);
	background: linear-gradient(@direction, @couleur-1, @couleur-2);
}

.pie-linear-gradient(@haut: #fff, @bas: #000, @direction: top)
{
	-pie-background: linear-gradient(@direction, @haut, @bas);
}

.background-clip(@argument: padding-box)
{
	-webkit-background-clip: @argument;
	   -moz-background-clip: @argument;
	        background-clip: @argument;
}

.background-size(@type: cover)
{
	-webkit-background-size: @type;
	   -moz-background-size: @type;
	     -o-background-size: @type;
	        background-size: @type;
}


/* ============================================================= */
/* BLOCK EFFECTS */
/* ============================================================= */
.border-radius(@radius: 5px)
{
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
	        border-radius: @radius;
	.background-clip;
}

.border-image(@image)
{
	-webkit-border-image: @image;
	   -moz-border-image: @image;
	     -o-border-image: @image;
	        border-image: @image;
}

.box-shadow(@arguments)
{
	-webkit-box-shadow: @arguments;
	   -moz-box-shadow: @arguments;
	        box-shadow: @arguments;
}

.text-shadow(@arguments)
{
	-webkit-text-shadow: @arguments;
	   -moz-text-shadow: @arguments;
	        text-shadow: @arguments;
}

.opacity(@opacite: 0.5)
{
	@opaciteIE: @opacite * 100;
	
	-webkit-opacity: @opacite;
	 -khtml-opacity: @opacite;
	   -moz-opacity: @opacite;
	        opacity: @opacite;
	
	.ie8 & { -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{opaciteIE})"; }		
	.ielt8 & { filter: ~"alpha(opacity=@{opaciteIE})"; }
}

.appearance(@appearance)
{
	-webkit-appearance: @appearance;
	   -moz-appearance: @appearance;
	        appearance: @appearance;
}


/* ============================================================= */
/* BLOCK FORMATTING */
/* ============================================================= */
.z1() { zoom: 1; }

.box-sizing(@type: border-box)
{ 
	-webkit-box-sizing: @type;
	   -moz-box-sizing: @type;
	        box-sizing: @type;
}

.border(@color: #000, @width: 1px, @style: solid) { border: @width @style @color; }
.border-left(@color: #000, @width: 1px, @style: solid) { border-left: @width @style @color; }
.border-top(@color: #000, @width: 1px, @style: solid) { border-top: @width @style @color; }
.border-right(@color: #000, @width: 1px, @style: solid) { border-right: @width @style @color; }
.border-bottom(@color: #000, @width: 1px, @style: solid) { border-bottom: @width @style @color; }

.box-dimensions(@width, @height)
{
	height: @height;
	width: @width;
}

.square(@cote: 1px)
{
	.box-dimensions(@cote, @cote);
}

.box(@width, @height, @margin, @padding)
{
	.box-dimensions(@width, @height);
	margin: @margin;
	padding: @padding;
}


.outline(@color: #000) { outline: 1px solid @color; }
.outline-ie(@color: #000) { .border(@color); margin:-1px; }


.inline-block-ie()
{
	display: inline-block;
	
	.ielt8 &
	{	
		display: inline;
		.z1;
	}
}

.inline-block-spacing(@spacing: -4px)
{
	letter-spacing: @spacing;
    word-spacing: @spacing;
}

.padding-vertical(@padding)
{
	padding-top: @padding;
	padding-bottom: @padding;
}

.padding-horizontal(@padding)
{
	padding-left: @padding;
	padding-right: @padding;
}


.cf
{
	.z1;
	
	&:before,
	&:after
	{
		content: "";
    	display: table;
		line-height: 0;
	}
	
	&:after { clear: both; }
}

/* ============================================================= */
/* TEXTE FORMATTING */
/* ============================================================= */
.font-size-em(@cible: 10, @contexte: 10)
{
	font-size: (@cible / @contexte) + 0em;
}

.line-height(@cible: 12, @contexte: 10)
{
	line-height: (@cible / @contexte) + 0;
}



/* ============================================================= */
/* POSITIONING */
/* ============================================================= */
.pos(@type: absolute, @top: auto, @right: auto, @bottom: auto, @left: auto)
{
	position: @type;
	top: @top;
	right: @right;
	bottom: @bottom;
	left: @left;
}

.pos-rel(@top: auto, @right: auto, @bottom: auto, @left: auto)
{
	.pos(relative, @top, @right, @bottom, @left);
}

.pos-abs(@top: auto, @right: auto, @bottom: auto, @left: auto)
{
	.pos(absolute, @top, @right, @bottom, @left);
}

.pos-fix(@top: auto, @right: auto, @bottom: auto, @left: auto)
{
	.pos(fixed, @top, @right, @bottom, @left);
}

.icon-center-x(@width: 0)
{
	margin-left: -(@width / 2);
	left: 50%;
}

.icon-center-y(@height: 0)
{
	margin-top: -(@height / 2);
	top: 50%;
}

.icon-center(@size: 0)
{
	.icon-center-x(@size);
	.icon-center-y(@size);
}


/* ============================================================= */
/* COLUMNS */
/* ============================================================= */
.column-gap(@sizing)
{
	-webkit-column-gap: @sizing;
	   -moz-column-gap: @sizing;
	        column-gap: @sizing;
}

.column-rule(@width, @style, @color)
{
	@val: @width @style @color;
	
	-webkit-column-rule: @val;
	   -moz-column-rule: @val;
	        column-rule: @val;
}

.column-rule-color(@color)
{
	-webkit-column-rule-color: @color;
	   -moz-column-rule-color: @color;
	        column-rule-color: @color;
}

.column-rule-style(@style)
{
	-webkit-column-rule-style: @style;
	   -moz-column-rule-style: @style;
	        column-rule-style: @style;
}

.column-rule-width(@width)
{
	-webkit-column-rule-width: @width;
	   -moz-column-rule-width: @width;
	        column-rule-width: @width;
}

.column-span(@span)
{
	-webkit-column-span: @span;
	        column-span: @span;
}

.column-width(@width)
{
	-webkit-column-width: @width;
	   -moz-column-width: @width;
	        column-width: @width;
}

.columns(@width, @count)
{
	@val: @width @count;
	
	-webkit-columns: @val;
	        columns: @val;
}

.column-count(@count)
{
	-webkit-column-count: @count;
	   -moz-column-count: @count;
	        column-count: @count;
}

/* ============================================================= */
/* IMAGES */
/* ============================================================= */
.ir(@width: 1px, @height: 1px)
{
	color: rgba(0,0,0,0);
	height: @height;
	/*font-size: 0;*/
	overflow: hidden;
	/*padding-left: @width;*/
	white-space: nowrap;
	width: @width;
	text-indent: @width * 2;
}

.img-block() { a, img { display: block; } }


/* ============================================================= */
/* TRIANGLES */
/* ============================================================= */
.triangle(@width: 0, @color: #000)
{
	.rotate(360deg);
	.square(0px);
	border-style: solid;
	border-width: @width;
	border-color: @color;
	content: '';
	display: inline-block;
}

.triangle-tl(@width: 0, @height: 0, @color: #000)
{
	.triangle(@width @width 0 0, @color transparent transparent);
}

.triangle-t(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 (@width / 2) @height, transparent transparent @color);
}

.triangle-tr(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 @width @width 0, transparent @color transparent transparent);
}

.triangle-r(@width: 0, @height: 0, @color: #000)
{
	.triangle((@width / 2) 0 (@width / 2) @height, transparent transparent transparent @color);
}

.triangle-br(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 0 @width @width, transparent transparent @color);
}

.triangle-b(@width: 0, @height: 0, @color: #000)
{
	.triangle(@height (@width / 2) 0, @color transparent transparent);
}

.triangle-bl(@width: 0, @height: 0, @color: #000)
{
	.triangle(@width 0 0 @width, transparent transparent transparent @color);
}

.triangle-l(@width: 0, @height: 0, @color: #000)
{
	.triangle((@width / 2) @height (@width / 2) 0, transparent @color transparent transparent);
}