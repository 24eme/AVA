degustation:
  url: /degustation
  param: { module: degustation, action: index }
  requirements:
    sf_method: [get]
  class: DegustationGeneralRoute

degustation_etablissement_list:
  url: /degustation/etablissement/:id
  param: { module: degustation, action: list }
  class: DegustationRoute
  options:
    model:    Etablissement
    type:     object

degustation_prelevement_lots:
  url: /degustation/:id/prelevement-lots
  param: { module: degustation, action: prelevementLots }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_selection_degustateurs:
  url: /degustation/:id/selection-degustateurs
  param: { module: degustation, action: selectionDegustateurs }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_validation:
  url: /degustation/:id/validation
  param: { module: degustation, action: validation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_visualisation_prelevement:
  url: /degustation/:id/visualisation-prelevement
  param: { module: degustation, action: visualisationPrelevement }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_visualisation:
  url: /degustation/:id/visualisation
  param: { module: degustation, action: visualisation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]

degustation_degustateur_confirmation:
  url: /degustation/:id/degustateur-confirmation/:confirmation
  param: { module: degustation, action: degustateurConfirmation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_preleve:
  url: /degustation/:id/preleve
  param: { module: degustation, action: preleve }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_organisation_table:
  url: /degustation/:id/organisation-table/:numero_table
  param: { module: degustation, action: organisationTable, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_ajout_leurre:
  url: /degustation/:id/ajout-leurre
  param: { module: degustation, action: ajoutLeurre, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_presences:
  url: /degustation/:id/presences/:numero_table
  param: { module: degustation, action: presences, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_resultats:
  url: /degustation/:id/resultats/:numero_table
  param: { module: degustation, action: resultats, numero_table: 0 }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_degustateurs_presences:
  url: /degustation/:id/degustateurs-presence/:numero_table
  param: { module: degustation, action: resultats }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get, post]

degustation_devalidation:
  url: /degustation/:id/devalidation
  param: { module: degustation, action: devalidation }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]


degustation_redirect:
  url: /degustation/:id/redirect
  param: { module: degustation, action: redirect }
  class: DegustationRoute
  options:
    model:    Degustation
    type:     object
  requirements:
    sf_method: [get]
